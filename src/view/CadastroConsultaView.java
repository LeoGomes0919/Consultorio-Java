/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ConsultaCtrl;
import controller.GenericCtrl;
import controller.MedicoCtrl;
import controller.PacienteCtrl;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Consulta;
import model.Generic;
import model.Medico;
import model.Paciente;

/**
 *
 * @author leogo
 */
public class CadastroConsultaView extends javax.swing.JInternalFrame {

    Consulta consulta = new Consulta();
    ConsultaCtrl consultaCtrl = new ConsultaCtrl();

    Paciente paciente = new Paciente();
    PacienteCtrl pacienteCtrl = new PacienteCtrl();
    ArrayList<Paciente> listarPaciente = new ArrayList<>();

    Medico medico = new Medico();
    MedicoCtrl medicoCtrl = new MedicoCtrl();
    ArrayList<Medico> listarMedico = new ArrayList<>();

    ArrayList<Generic> listaConsultaMedPac = new ArrayList<>();
    GenericCtrl genericCtrl = new GenericCtrl();

    String salvarAlterar;

    /**
     * Creates new form CadastroConsultaView
     */
    public CadastroConsultaView() {
        initComponents();
        preencherDataSistema();
        carregarConsulta();
        carregarMedicos();
        carregarPacientes();
        retornarMedico();
        retornarPaciente();
        habilitarDesabilitar(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jcb_paciente = new componentes.UJComboBox();
        jcb_medico = new componentes.UJComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_frequencia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lbl_paciente = new javax.swing.JLabel();
        lbl_medico = new javax.swing.JLabel();
        jcb_realiza = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        lbl_cosulta = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        txt_diastolica = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_sistolica = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jcb_dateTime = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_consulta = new javax.swing.JTable();
        btn_salvar = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_novo = new javax.swing.JButton();
        btn_fechar = new javax.swing.JButton();
        btn_apagar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Realizar Consulta");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Paciente");

        jcb_paciente.setEditable(true);
        jcb_paciente.setAutocompletar(true);
        jcb_paciente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcb_paciente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcb_pacientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jcb_medico.setEditable(true);
        jcb_medico.setAutocompletar(true);
        jcb_medico.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcb_medico.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcb_medicoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Médico");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Frequência BPM");

        txt_frequencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Data da Consulta");

        lbl_paciente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbl_paciente.setForeground(new java.awt.Color(255, 255, 255));
        lbl_paciente.setText("IdPaciente");

        lbl_medico.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbl_medico.setForeground(new java.awt.Color(255, 255, 255));
        lbl_medico.setText("IdMedico");

        jcb_realiza.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcb_realiza.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE", "SIM", "NÃO" }));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Consulta Realizada?");

        jLabel8.setText("Consultas Realizadas");

        jPanel9.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        lbl_cosulta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbl_cosulta.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cosulta.setText("idConsulta");

        jLabel9.setText("Consultas não Realizadas");

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        txt_diastolica.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        txt_diastolica.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Diastólica");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Sistólica");

        try {
            txt_sistolica.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_sistolica.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pressão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        try {
            jcb_dateTime.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jcb_dateTime.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jcb_dateTime.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcb_dateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jcb_dateTimeFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcb_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_paciente)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_cosulta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_medico)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcb_medico, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jcb_realiza, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_sistolica, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txt_diastolica, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel10))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_frequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jcb_dateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel8)))))
                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_paciente)
                        .addComponent(lbl_cosulta)
                        .addComponent(lbl_medico)
                        .addComponent(jLabel4)
                        .addComponent(jLabel7)))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcb_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_realiza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel10))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_sistolica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_diastolica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(5, 5, 5)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel8))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_frequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jcb_dateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(13, 13, 13))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)))
        );

        jt_consulta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jt_consulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Paciente", "Médico", "Sistólica", "Diastólica", "Frequência BPM", "Data da Consulta", "Consulta Finalizada?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_consulta.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jt_consulta);
        if (jt_consulta.getColumnModel().getColumnCount() > 0) {
            jt_consulta.getColumnModel().getColumn(1).setMinWidth(150);
            jt_consulta.getColumnModel().getColumn(1).setPreferredWidth(200);
            jt_consulta.getColumnModel().getColumn(2).setMinWidth(150);
            jt_consulta.getColumnModel().getColumn(2).setPreferredWidth(200);
            jt_consulta.getColumnModel().getColumn(3).setMinWidth(80);
            jt_consulta.getColumnModel().getColumn(3).setPreferredWidth(90);
            jt_consulta.getColumnModel().getColumn(4).setMinWidth(80);
            jt_consulta.getColumnModel().getColumn(4).setPreferredWidth(90);
            jt_consulta.getColumnModel().getColumn(5).setMinWidth(80);
            jt_consulta.getColumnModel().getColumn(5).setPreferredWidth(100);
            jt_consulta.getColumnModel().getColumn(6).setMinWidth(120);
            jt_consulta.getColumnModel().getColumn(6).setPreferredWidth(150);
            jt_consulta.getColumnModel().getColumn(7).setMinWidth(110);
            jt_consulta.getColumnModel().getColumn(7).setPreferredWidth(120);
        }

        btn_salvar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Save_24px.png"))); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_editar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Edit_24px.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_novo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Create_24px.png"))); // NOI18N
        btn_novo.setText("Novo");
        btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novoActionPerformed(evt);
            }
        });

        btn_fechar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_fechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancel_24px.png"))); // NOI18N
        btn_fechar.setText("Fechar");
        btn_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fecharActionPerformed(evt);
            }
        });

        btn_apagar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_apagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Trash Can_24px.png"))); // NOI18N
        btn_apagar.setText("Apagar");
        btn_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_fechar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_apagar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_editar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_novo)
                        .addGap(18, 18, 18)
                        .addComponent(btn_salvar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar)
                    .addComponent(btn_editar)
                    .addComponent(btn_novo)
                    .addComponent(btn_fechar)
                    .addComponent(btn_apagar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(300, 100, 736, 468);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fecharActionPerformed
        dispose();
    }//GEN-LAST:event_btn_fecharActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        if (salvarAlterar.equals("salvar")) {
            salvar();
        } else if (salvarAlterar.equals("alterar")) {
            alterarConsulta();
        }
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void jcb_pacientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcb_pacientePopupMenuWillBecomeInvisible
        if (jcb_paciente.isPopupVisible()) {
            preencherCod();
        }
    }//GEN-LAST:event_jcb_pacientePopupMenuWillBecomeInvisible

    private void jcb_medicoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcb_medicoPopupMenuWillBecomeInvisible
        if (jcb_medico.isPopupVisible()) {
            preencherCod();
        }
    }//GEN-LAST:event_jcb_medicoPopupMenuWillBecomeInvisible

    private void btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novoActionPerformed
        salvarAlterar = "salvar";
        habilitarDesabilitar(true);
    }//GEN-LAST:event_btn_novoActionPerformed

    private void btn_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagarActionPerformed
        int d = JOptionPane.showConfirmDialog(null, "Deseja apagar este registro?", "AVISO", JOptionPane.YES_NO_OPTION);
        if (d == 0) {
            try {
                if (jt_consulta.getSelectedRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "Selecione um registro", "AVISO", JOptionPane.ERROR_MESSAGE);
                } else {
                    int[] rows = jt_consulta.getSelectedRows();
                    for (int i = 0; i < rows.length; i++) {
                        int codigo = (int) jt_consulta.getValueAt(rows[i], 0);
                        consultaCtrl.deletConsultaCtrl(codigo);
                    }
                    JOptionPane.showMessageDialog(null, "Resgistro apagado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao tentar apagar registro!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        limparTabela();
        carregarConsulta();
    }//GEN-LAST:event_btn_apagarActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        salvarAlterar = "alterar";
        if (jt_consulta.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um registro", "AVISO", JOptionPane.ERROR_MESSAGE);
        } else {
            selectConsulta();
            habilitarDesabilitar(true);
            if (lbl_medico.getText().equals("0") || lbl_paciente.getText().equals("0")) {
                jcb_paciente.setSelectedItem("SELEIONE O PACIENTE");
                jcb_medico.setSelectedItem("SELEIONE O MÉDICO");
            } else {
                medico = medicoCtrl.retoMedicoIdCtrl(Integer.parseInt(lbl_medico.getText()));
                jcb_medico.setSelectedItem(medico.getNome().toUpperCase());
                paciente = pacienteCtrl.retoPacienteIdCtrl(Integer.parseInt(lbl_paciente.getText()));
                jcb_paciente.setSelectedItem(paciente.getNome().toUpperCase());
            }
        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void jcb_dateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcb_dateTimeFocusGained
        jcb_dateTime.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm").format(new Date(System.currentTimeMillis())));
    }//GEN-LAST:event_jcb_dateTimeFocusGained

    private void alterarConsulta() {
        salvarAlterar = "alterar";
        if (jcb_paciente.getSelectedItem().toString().equals("") || jcb_medico.getSelectedItem().toString().equals("") || txt_sistolica.getText().equals("") || txt_diastolica.getText().equals("") || txt_frequencia.getText().trim().equals("") || jcb_dateTime.getText().equals("  /  /       :  ") || jcb_realiza.getSelectedItem().equals("SELECIONE")) {
            JOptionPane.showMessageDialog(null, "Preencha todos campos!", "AVISO", JOptionPane.ERROR_MESSAGE);
        } else {
            consulta.setPaciente(Integer.parseInt(lbl_paciente.getText()));
            consulta.setMedico(Integer.parseInt(lbl_medico.getText()));
            consulta.setStatus(jcb_realiza.getSelectedItem().toString());
            consulta.setSistolica(Integer.parseInt(txt_sistolica.getText()));
            consulta.setDiastolica(Integer.parseInt(txt_diastolica.getText()));
            consulta.setFrequencia(txt_frequencia.getText());
            consulta.setData_consulta(jcb_dateTime.getText());

            if (consultaCtrl.upConsultCtrl(consulta)) {
                JOptionPane.showMessageDialog(null, "Alterado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                habilitarDesabilitar(false);
                limparCampos();
                limparTabela();
                carregarConsulta();
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar alterar registro!", "AVISO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void selectConsulta() {
        salvarAlterar = "alterar";
        int linha = jt_consulta.getSelectedRow();
        int codigo = (int) jt_consulta.getValueAt(linha, 0);
        try {
            consulta = consultaCtrl.getConsultaIdCtrl(codigo);
            lbl_cosulta.setText(String.valueOf(consulta.getId_consulta()));
            lbl_paciente.setText(String.valueOf(consulta.getPaciente()));
            lbl_medico.setText(String.valueOf(consulta.getMedico()));
            txt_sistolica.setText(String.valueOf(consulta.getSistolica()));
            txt_diastolica.setText(String.valueOf(consulta.getDiastolica()));
            txt_frequencia.setText(consulta.getFrequencia());
            if (jcb_dateTime.getText().equals("  /  /       :  ")) {
                jcb_dateTime.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm").format(new Date(System.currentTimeMillis())));
            } else {
                jcb_dateTime.setText(consulta.getData_consulta());
            }
            jcb_realiza.setSelectedItem(consulta.getStatus());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar registro!", "AVISO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void preencherDataSistema() {
        this.jcb_dateTime.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm").format(new Date(System.currentTimeMillis())));
    }

    private void limparTabela() {
        DefaultTableModel modelo = (DefaultTableModel) jt_consulta.getModel();
        modelo.setNumRows(0);
    }

    private void carregarConsulta() {
        DefaultTableModel modelo = (DefaultTableModel) jt_consulta.getModel();
        listaConsultaMedPac = genericCtrl.getListaConsultaCtrl();
        int cont = listaConsultaMedPac.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaConsultaMedPac.get(i).getConsulta().getId_consulta(),
                listaConsultaMedPac.get(i).getPaciente().getNome(),
                listaConsultaMedPac.get(i).getMedico().getNome(),
                listaConsultaMedPac.get(i).getConsulta().getSistolica(),
                listaConsultaMedPac.get(i).getConsulta().getDiastolica(),
                listaConsultaMedPac.get(i).getConsulta().getFrequencia(),
                listaConsultaMedPac.get(i).getConsulta().getData_consulta(),
                listaConsultaMedPac.get(i).getConsulta().getStatus()
            });
        }
        CorDataLinha();
    }

    private void CorDataLinha() {
        String status = "SIM";
        String status2 = "NÃO";
        jt_consulta.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable tabela, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel label = (JLabel) super.getTableCellRendererComponent(tabela, value, isSelected, hasFocus, row, column);
                Color c = Color.WHITE;
                Font f;
                Object texto = tabela.getValueAt(row, 7);
                if (texto != null && status.equals(texto.toString())) {
                    c = Color.CYAN;
                }
                label.setBackground(c);
                if (texto != null && status2.equals(texto.toString())) {
                    f = new Font("Arial", Font.BOLD, 12);
                    label.setFont(f);
                }
                jt_consulta.setSelectionForeground(Color.BLACK);

                return label;
            }
        });
    }

    private void limparCampos() {
        jcb_paciente.setSelectedIndex(0);
        jcb_medico.setSelectedIndex(0);
        txt_sistolica.setText("");
        txt_diastolica.setText("");
        txt_frequencia.setText("");
        jcb_realiza.setSelectedIndex(0);

    }

    private void habilitarDesabilitar(boolean condicao) {
        jcb_paciente.setEnabled(condicao);
        jcb_medico.setEnabled(condicao);
        txt_sistolica.setEnabled(condicao);
        txt_diastolica.setEnabled(condicao);
        txt_frequencia.setEnabled(condicao);
        btn_salvar.setEnabled(condicao);
        jcb_dateTime.setEnabled(condicao);
    }

    private void salvar() {
        salvarAlterar = "salvar";
        if (jcb_paciente.getSelectedItem().toString().equals("") || jcb_medico.getSelectedItem().toString().equals("") || txt_sistolica.getText().equals("") || txt_diastolica.getText().equals("") || txt_frequencia.getText().trim().equals("") || jcb_dateTime.getText().equals("  /  /       :  ") || jcb_realiza.getSelectedItem().equals("SELECIONE")) {
            JOptionPane.showMessageDialog(null, "Preencha todos campos!", "AVISO", JOptionPane.ERROR_MESSAGE);
        } else {
            consulta.setPaciente(Integer.parseInt(lbl_paciente.getText()));
            consulta.setMedico(Integer.parseInt(lbl_medico.getText()));
            consulta.setSistolica(Integer.parseInt(txt_sistolica.getText()));
            consulta.setDiastolica(Integer.parseInt(txt_diastolica.getText()));
            consulta.setFrequencia(txt_frequencia.getText());
            consulta.setData_consulta(jcb_dateTime.getText());
            consulta.setStatus(jcb_realiza.getSelectedItem().toString());

            if (consultaCtrl.saveConsultaCrtl(consulta) > 0) {
                JOptionPane.showMessageDialog(rootPane, "Salvo com Sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                habilitarDesabilitar(false);
                limparCampos();
                limparTabela();
                carregarConsulta();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Erro ao tentar Cadastrar!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void preencherCod() {
        if (jcb_paciente.getItemCount() == 0) {
            jcb_paciente.setSelectedItem("SELECIONE O PACIENTE");
            jcb_medico.setSelectedItem("SELECIONE O MÉDICO");
        } else {
            paciente = pacienteCtrl.retoPacienteNomeCtrl(jcb_paciente.getSelectedItem().toString());
            lbl_paciente.setText(String.valueOf(paciente.getIdPaciente()));
            medico = medicoCtrl.retoMedicoNomeCtrl(jcb_medico.getSelectedItem().toString());
            lbl_medico.setText(String.valueOf(medico.getIdMedico()));
        }
    }

    private void retornarPaciente() {
        if (jcb_paciente.getItemCount() == 0) {
            jcb_paciente.setSelectedItem("Selecione o paciente");
        } else {
            paciente = pacienteCtrl.retoPacienteNomeCtrl(jcb_paciente.getSelectedItem().toString());
            lbl_paciente.setText(String.valueOf(paciente.getIdPaciente()));
        }
    }

    private void carregarPacientes() {
        listarPaciente = pacienteCtrl.retoListPacienteCrtl();
        jcb_paciente.removeAllItems();
        for (int i = 0; i < listarPaciente.size(); i++) {
            jcb_paciente.addItem(listarPaciente.get(i).getNome());
        }
    }

    private void retornarMedico() {
        if (jcb_medico.getItemCount() == 0) {
            jcb_medico.setSelectedItem("Selecione o médico");
        } else {
            medico = medicoCtrl.retoMedicoNomeCtrl(jcb_medico.getSelectedItem().toString());
            lbl_medico.setText(String.valueOf(medico.getIdMedico()));
        }
    }

    private void carregarMedicos() {
        listarMedico = medicoCtrl.retoListMedicoCrtl();
        jcb_medico.removeAllItems();
        for (int i = 0; i < listarMedico.size(); i++) {
            jcb_medico.addItem(listarMedico.get(i).getNome());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_apagar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_fechar;
    private javax.swing.JButton btn_novo;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JFormattedTextField jcb_dateTime;
    private componentes.UJComboBox jcb_medico;
    private componentes.UJComboBox jcb_paciente;
    private javax.swing.JComboBox<String> jcb_realiza;
    private javax.swing.JTable jt_consulta;
    private javax.swing.JLabel lbl_cosulta;
    private javax.swing.JLabel lbl_medico;
    private javax.swing.JLabel lbl_paciente;
    private javax.swing.JFormattedTextField txt_diastolica;
    private javax.swing.JTextField txt_frequencia;
    private javax.swing.JFormattedTextField txt_sistolica;
    // End of variables declaration//GEN-END:variables
}
